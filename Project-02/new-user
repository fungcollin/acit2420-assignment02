#!/bin/bash
# FILE: new-user
# NOTE: This script will create a new user using the following:
# - A specified shell
# - A home directoy created
# - Clone /etc/skel
# - Addition of groups
# - Setup password

# MAIN SCRIPT:

if [[ $EUID -ne 0 ]]; then # Checks for root privileges
	echo "You need the correct privileges to run this script." # Prompts message that you require correct privileges.
	exit 1 # Exit the script.
fi

user_name=""
shell="/bin/bash"
groups=""
password=""
home_file="/home/$user_name"
UID__MIN1=1000 # Sets minimum of first set of UID range. 
UID_MAX1=65533 # Sets maximum of first set of UID range.
UID_MIN2=65535 # Sets minimum of second set of UID range.
UID_MAX2=4294967294 # Sets maximum of second set of UID range.

help() { # Help function to provide information on how to use the script.
	echo "How to use script: new-user -u <username> -s <shell> -g <groups> -p <password>"
	echo "Available functions:"
	echo "-u for Username"
	echo "-s for Shell"
	echo "-g for Groups"
	echo "-p for Password"
	exit 0

}

# MAIN SCRIPT:

while getopts ":u:s:g:p:" opt; do # Options for user_name, shell, groups, and password.
    case "${opt}" in
        u)
            user_name=${OPTARG}  # Assign username.
            ;;
        s)
            shell=${OPTARG}  # Assign shell.
            ;;
        g)
            groups=${OPTARG}  # Assign groups.
            ;;
        p)
            password=${OPTARG}  # Assign password.
            ;;
		h)
			help # Calls help function.
			;;
        :)
            echo "Cannot have no input."
            exit 1
            ;;
        ?)
            echo "Invalid option."
            exit 1
            ;;
    esac
done

if [ -z "$user_name" ]; then # Checks if username is empty.
    echo "Username is required."
	help
    exit 1
fi

get_uid() {
    # Start with the first range and iterate sequentially
    for uid in $(seq $UID_MIN1 $UID_MAX1) $(seq $UID_MIN2 $UID_MAX2); do # Start with the first range and iterate sequentially
        if ! cut -d : -f3 /etc/passwd | grep -qx "$uid"; then # cut -d : -f3 takes the third field of /etc/passwd and checks for matches/uid in use using grep -qx and proceeds only if there is no match.
            echo "$uid valid."
            return
        fi
    done
    echo "No valid UID."
    exit 1
}

get_gid() {
    # Start with the first range and iterate sequentially
    for gid in $(seq $UID_MIN1 $UID_MAX1) $(seq $UID_MIN2 $UID_MAX2); do # Start with the first range and iterate sequentially
        if ! cut -d : -f3 /etc/group | grep -qx "$gid"; then # cut -d : -f3 takes the third field of /etc/group and checks for matches/gid using grep -qx and proceeds only if there is no match.
            echo "$gid valid."
            return
        fi
    done
    echo "No valid GID."
    exit 1
}

UID=$(get_uid)
GID=$(get_gid)


echo "$user_name:x:$GID:" >> /etc/group # Appends username to /etc/group.
echo "$user_name:x:$UID:$GID:$home_file:$shell" >> /etc/passwd # Appends username to /etc/passwd.
echo "$username:!!:::::::" >> /etc/shadow # Appends username to /etc/shadow. and !! indicates there is no active password

mkdir -p "$home_file" # Creates a home directory and clones /etc/skel.
cp -r /etc/skel/. "$home_file" # Creates a home directory and clones /etc/skel.

chown "$user_name:$uid" "$home_file" # Changes ownership.
chmod 700 "$home_file" # Changes user permission.

if [[ -n "$groups" ]]; then
    for group in $groups; do

passwd $username # Prompts user to enter a password.

# REFERENCES:
# https://www.tutorialspoint.com/guide-to-generate-random-numbers-in-linux suggest to use RANDOM to generate random numbers.
# https://www.geeksforgeeks.org/random-shell-variable-in-linux-with-examples/ suggest to use RANDOM to generate random numbers.
# https://unix.stackexchange.com/questions/397236/sed-to-change-userid-in-etc-passwd-to-zero suggest to use sed to change UID in /etc/passwd.
# https://www.baeldung.com/linux/username-user-id suggest to use /etc/passwd to check for UID.
# https://www.man7.org/linux/man-pages/man5/group.5.html suggest to use /etc/group to check for GID. 