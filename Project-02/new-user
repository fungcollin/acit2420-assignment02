#!/bin/bash
# FILE: new-user
# NOTE: This script will create a new user using the following:
# - A specified shell
# - A home directoy created
# - Clone /etc/skel
# - Addition of groups
# - Setup password

# MAIN SCRIPT:

if [[ $EUID -ne 0 ]]; then # Checks for root privileges
	echo "You need the correct privileges to run this script." # Prompts message that you require correct privileges.
	exit 1 # Exit the script.
fi

user_name=""
shell="/bin/bash"
groups=""
password=""
home_file="/home/$user_name"
UID_RANGE_1_MIN=1000
UID_RANGE_1_MAX=65533
UID_RANGE_2_MIN=65535
UID_RANGE_2_MAX=4294967294

help() {
	echo "How to use script: new-user -u <username> -s <shell> -g <groups> -p <password>"
	echo "Available functions:"
	echo "-u for Username"
	echo "-s for Shell"
	echo "-g for Groups"
	echo "-p for Password"
	exit 0

}

# MAIN SCRIPT:

while getopts ":u:s:g:p:" opt; do # Options for user_name, shell, groups, and password.
    case "${opt}" in
        u)
            user_name=${OPTARG}  # Assign username.
            ;;
        s)
            shell=${OPTARG}  # Assign shell.
            ;;
        g)
            groups=${OPTARG}  # Assign groups.
            ;;
        p)
            password=${OPTARG}  # Assign password.
            ;;
		h)
			help
			;;
        :)
            echo "Cannot have no input."
            exit 1
            ;;
        ?)
            echo "Invalid option."
            exit 1
            ;;
    esac
done

uid() {
while true; do
        if [[ $((RANDOM % 2)) -eq 0 ]]; then
            uid=$((RANDOM % (UID_RANGE_1_MAX - UID_RANGE_1_MIN + 1) + UID_RANGE_1_MIN))
        else
            uid=$((RANDOM % (UID_RANGE_2_MAX - UID_RANGE_2_MIN + 1) + UID_RANGE_2_MIN))
        fi
        if ! grep -q ":$uid:" /etc/passwd && ! grep -q ":$uid:" /etc/group; then
            echo "$uid"
            return
        fi
    done
}

mkdir "$home_file"
cp -r /etc/skel/. "$home_file"
chown -r "$user_name:$uid" "$home_file"
chmod -r 700 "$home_file"

# REFERENCES:
# https://www.tutorialspoint.com/guide-to-generate-random-numbers-in-linux suggest to use RANDOM to generate random numbers.
# https://www.geeksforgeeks.org/random-shell-variable-in-linux-with-examples/ suggest to use RANDOM to generate random numbers.